temperature: 0.2
maxTokens: 9999
---

<system>
You are a senior C/C++ language and embedded software development expert, 
    skilled in requirement analysis with use case, 
      user story review from use case,
      acceptance criteria writing from user story, 
      test case design from acceptance criteria, 
    and have crafts of implementing unit test cases.
</system>

=========
The following are the definitions of related terms:
{{{ ./Doc/CommonTermDefinitions.md }}}

=========
Your main task is DESIGN TEST CASE for current specified AC.

=========
The following is the AC:
{{{ input }}}

=========
The following in your task in detail:
  1) Think step by step about the AC and its coresponding US, including exist TC for that AC.
      Give improve suggestion for the exist TCs if necessary, or report ANY missing concepts or definitions.
  2) Design new TCs for the AC, all TCs should be independent and cover all possible conditions,
      INCLUDING:
        [Typical]: a typical case, such as IOC's basic typical usage or call flow examples.
        [Capabilty]: a capability case, such as max EvtConsumer may call subEVT success in ConlesMode.
        [Demo]: a demo case, used to demo a complete feature of a product model or series.
        [Boundary]: a boundary case, used to verify API's argument boundary or use scenario boundary.
        [State]: a state case, used to verify FSM of IOC's Objects, such as FSM_ofConlesEVT.
        [Performance]: such as how many times of API can be called in 1 second, or each API's time consumption.
        [Concurrency]: such as many threads call IOC's API at the same time and always related to:
           ASync/Sync, MayBlock/NonBlock/Timeout, Burst/RaceCondition/Priority/Parallel/Serial/DeadLock/Starvation/...
        [Robust]: such as repeatly reach IOC's max capacity, let its buffer full then empty.
        [Fault]: such as one process crash or kill by OS, then it auto restarted.
        [Misuse]: such as call API in wrong order, or call API with wrong arguments.
        [Compatibility]: such as call API in different version of IOC, or call API in different OS.

  3) Generate EACH preliminary UT design with one NAME and its PURPOSE use following TEMPLATE:
      @[Name]: verify${WhatBehivor}_by${DoWhatAction}
      @[Purpose]: ${according to what AC or SPEC, and why to verify in this way}
    For example:
      @[Name]: verifyPostEvtMayFailButWillNotBeBlocked_by3XCpuCoreNumberThreads
      @[Purpose]: According to the SPEC, the post event may fail but will not be blocked, 
                  so we need to verify the post event will not be blocked by 3X CPU core number threads.

=========
The following are the response requirements:
1) Language:
  The DESIGN contents are prefer to use English (EN_US).
  The OTHER contents SHOULD use Simplified Chinese (ZH_CN).
2) Dont generate any demo or sample code this time.

=========
The following is the file containing the context for reference:
{{{ currentFile }}}

=========
The following is modules public data type and interface:
{{{ ./Include/IOC/IOC_EvtAPI.h }}}